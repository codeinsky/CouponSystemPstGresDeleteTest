{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/company.ts","webpack:///./src/app/common/customer.ts","webpack:///./src/app/components/addcustomer/addcustomer.component.css","webpack:///./src/app/components/addcustomer/addcustomer.component.html","webpack:///./src/app/components/addcustomer/addcustomer.component.ts","webpack:///./src/app/components/craete-company/craete-company.component.css","webpack:///./src/app/components/craete-company/craete-company.component.html","webpack:///./src/app/components/craete-company/craete-company.component.ts","webpack:///./src/app/components/get-all-companies/get-all-companies.component.css","webpack:///./src/app/components/get-all-companies/get-all-companies.component.html","webpack:///./src/app/components/get-all-companies/get-all-companies.component.ts","webpack:///./src/app/components/getallcustomers/getallcustomers.component.css","webpack:///./src/app/components/getallcustomers/getallcustomers.component.html","webpack:///./src/app/components/getallcustomers/getallcustomers.component.ts","webpack:///./src/app/components/remove-company/remove-company.component.css","webpack:///./src/app/components/remove-company/remove-company.component.html","webpack:///./src/app/components/remove-company/remove-company.component.ts","webpack:///./src/app/components/removeupdatecustomer/removeupdatecustomer.component.css","webpack:///./src/app/components/removeupdatecustomer/removeupdatecustomer.component.html","webpack:///./src/app/components/removeupdatecustomer/removeupdatecustomer.component.ts","webpack:///./src/app/services/admin-requests.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"panel\\\">\\n\\t<div class=\\\"panel-heading\\\"><h1>Welcome to admin home page</h1></div>\\n</div>\\t\\n\\n<nav class=\\\"navbar navbar-light\\\" style=\\\"background-color: #e3f2fd;\\\">\\n    <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\"\\n                data-target=\\\".navbar-collapse\\\">\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"active\\\"><a routerLink=\\\"#\\\">Home</a></li>\\n            <li><a routerLink=\\\"/getallcompanies\\\">Get All Companies</a></li>\\n            <li><a routerLink=\\\"/createcompany\\\">Create Copmany</a></li>\\n            <li><a routerLink=\\\"/removecopmany\\\">Remove/Update Company</a></li>\\n            <li><a routerLink=\\\"/addcustomer\\\">Add Customer</a></li>\\n            <li><a routerLink=\\\"/removeupadecustomer\\\">Remove/Update Customer</a></li>\\n            <li><a routerLink=\\\"/getallcustomers\\\">Get All Customers</a></li>\\n        </ul>\\n        \\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { GetAllCompaniesComponent } from './components/get-all-companies/get-all-companies.component';\nimport { CraeteCompanyComponent } from './components/craete-company/craete-company.component';\nimport { HttpModule} from '@angular/http';\nimport { AdminRequestsService} from './services/admin-requests.service';\nimport { RouterModule} from '@angular/router';\nimport { RemoveCompanyComponent } from './components/remove-company/remove-company.component';\nimport { AddcustomerComponent } from './components/addcustomer/addcustomer.component';\nimport { RemoveupdatecustomerComponent } from './components/removeupdatecustomer/removeupdatecustomer.component';\nimport { GetallcustomersComponent } from './components/getallcustomers/getallcustomers.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GetAllCompaniesComponent,\n    CraeteCompanyComponent,\n    RemoveCompanyComponent,\n    AddcustomerComponent,\n    RemoveupdatecustomerComponent,\n    GetallcustomersComponent,\n  ],\n  imports: [\n    \n    BrowserModule, \n    FormsModule,\n    HttpModule, \n    RouterModule.forRoot(\n      [\n      {\n        path: 'getallcompanies' , \n        component : GetAllCompaniesComponent\n      } , \n      {\n        path: 'createcompany' , \n        component : CraeteCompanyComponent\n\n      },\n      {\n        path: 'removecopmany',\n        component: RemoveCompanyComponent\n      },\n      {\n        path : 'addcustomer' , \n        component : AddcustomerComponent \n      }, \n      {\n        path : 'removeupadecustomer' , \n        component : RemoveupdatecustomerComponent\n      },\n      {\n        path : 'getallcustomers' , \n        component: GetallcustomersComponent\n      }\n\n      ])\n  ],\n  providers: [ AdminRequestsService  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Company {\n\tconstructor(\n\t\tpublic id : number , \n\t\tpublic compName : string , \n\t\tpublic password : string , \n\t\tpublic email : string)\n\t{\n\n\t}\n\t\n}\n","export class Customer {\n\tconstructor(\n\t\tpublic id: number , \n\t\tpublic custName : string , \n\t\tpublic password : string)\n\t{\n\t\t\n\t}\n}\n","module.exports = \"\"","module.exports = \"\\n\\t\\n\\t\\t<div class=\\\"panel panel-primary\\\" style=\\\"height:355px;width: 20%;\\\">\\n\\t<div class=\\\"panel-heading\\\"><h5>Add New Customer</h5></div> \\n\\t<br>\\n\\t\\t<form class=\\\"form-horizontal\\\" style=\\\"margin-left: 10px; margin-right: 10px ;margin-right: 10px ;\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t<label for=\\\"\\\">Customer ID</label>\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" name=\\\"id\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCustomer.id\\\"> \\n\\t\\t\\t\\t\\n\\t<br>\\n\\t\\t\\t\\t<label for=\\\"\\\">Customer Name</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCustomer.custName\\\">{{addCustomer.name}}\\n\\t<br>\\n\\n\\t\\t\\t\\t<label for=\\\"\\\">Password</label>\\n\\t\\t\\t\\t<input type=\\\"passwod\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCustomer.password\\\">\\n\\t<br>\\n\\t<button (click)=\\\"addNewCustomer()\\\" class=\\\"btn btn-primary\\\">Add customer</button>\\n\\t<br>\\n</form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Customer} from '../../common/customer';\nimport { AdminRequestsService} from '../../services/admin-requests.service';\nimport swal from 'sweetalert2';\n@Component({\n  selector: 'app-addcustomer',\n  templateUrl: './addcustomer.component.html',\n  styleUrls: ['./addcustomer.component.css']\n})\nexport class AddcustomerComponent implements OnInit {\n  addCustomer: Customer = new Customer(0,\"\",\"\"); \n  constructor(private _adminService:AdminRequestsService) { }\n\n  ngOnInit() {\n  }\n\naddNewCustomer(){\n\tthis._adminService.createCustomer(this.addCustomer).subscribe(\n\t\t(resp) => {\n\t\t\tswal (\"New customer added\");\n\t\t}, \n\t\t(error)=> {\n\t\t\tswal (error._body);\n\t\t})\n\t\n}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\" style=\\\"width:20%; margin:1%\\\" >\\n\\t<div class=\\\"panel-heading\\\"><h5 style=\\\"font-weight: bold\\\">Create company</h5></div>\\n\\n<form class=\\\"form-horizontal\\\" style=\\\"margin:5px\\\">\\n\\t\\t<label for=\\\"\\\">Enter Company ID</label>\\n\\t\\t<input type=\\\"number\\\" name=\\\"id\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCompany.id\\\" placeholder=\\\"01\\\"> \\n\\t<br>\\n\\t\\t<label for=\\\"\\\">Enter Company Name</label>\\n\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"addCompany.compName\\\" placeholder=\\\"Company\\\" name=\\\"compName\\\">\\n\\t<br>\\n\\t\\t<label for=\\\"\\\">Enter Password</label>\\n\\t\\t<input type=\\\"passwod\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCompany.password\\\"\\n\\t\\tplaceholder=\\\"1234\\\">\\n\\t<br>\\n\\t\\t<label for=\\\"\\\">Enter Email</label> \\n\\t\\t<input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addCompany.email\\\" placeholder=\\\"email@email.com\\\"> \\n\\t<br>\\n\\n\\t<button (click)=\\\"createCompany()\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: \\\">Create Company</button>\\n\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Company} from '../../common/company';\nimport { AdminRequestsService} from '../../services/admin-requests.service';\nimport swal from 'sweetalert2';\n@Component({\n  selector: 'app-craete-company',\n  templateUrl: './craete-company.component.html',\n  styleUrls: ['./craete-company.component.css']\n})\nexport class CraeteCompanyComponent implements OnInit {\n\n  addCompany:Company = new Company( 0 , \"\" , \"\" , \"\");\n  name : any = \"check\";\n  constructor(private _adminservice:AdminRequestsService) { \n  }\n\n  ngOnInit() {\n  }\n  createCompany() {\n    this._adminservice.createNewCopmany(this.addCompany).subscribe(\n      (resp)=>{\n        swal(\"Company created\");\n      } , \n      (error)=> {\n        swal(error._body); \n      }\n      )\n  }\n  \n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\" style=\\\"width: 50%\\\">\\n\\t<div class=\\\"panel-heading\\\">\\n<h5 style=\\\"font-weight: bold;\\\">All Companies</h5>\\n\\t</div>\\n<table class=\\\"table table-striped table-bordered\\\">\\n\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Company Name</th>\\n\\t\\t\\t<th>Password</th>\\n\\t\\t\\t<th>Email</th>\\n\\t\\t</tr>\\n\\t\\n\\t<tr *ngFor = \\\"let company of companies\\\">\\n\\t<td>{{company.id}}</td>\\t\\n\\t<td>{{company.compName}}</td>\\n\\t<td>{{company.password}}</td>\\n\\t<td>{{company.email}}</td>\\n\\t</tr>\\n</table>\\n<button (click)=\\\"loadAllComapnies()\\\" style=\\\"margin-top: 5%\\\">Update List</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Company} from '../../common/company';\nimport { Http} from '@angular/http';\nimport { AdminRequestsService} from '../../services/admin-requests.service';\n\n@Component({\n  selector: 'app-get-all-companies',\n  templateUrl: './get-all-companies.component.html',\n  styleUrls: ['./get-all-companies.component.css']\n})\nexport class GetAllCompaniesComponent implements OnInit { \n\tcompanies: Company[]; \t\t\n  constructor(private _adminservice:AdminRequestsService) { \n    _adminservice.getAllComapnies();\n  \tthis.companies = this._adminservice.companies;\n  }\n\n  ngOnInit() {\n  }\n\n loadAllComapnies(){\n  \tthis._adminservice.getAllComapnies();\n  \tthis.companies = this._adminservice.companies;\n \n }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\" style=\\\"width: 50%\\\" >\\n\\t<div class=\\\"panel-heading\\\">\\n\\t<h5 style=\\\"font-weight: bold;\\\">Customer List</h5>\\n\\t</div>\\n\\t<table class=\\\"table table table-striped table-bordered\\\">\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Name</th>\\n\\t\\t\\t<th>Password</th>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let customer of customers\\\">\\n\\t\\t\\t<td>{{customer.id}}</td>\\n\\t\\t\\t<td>{{customer.custName}}</td>\\n\\t\\t\\t<td>{{customer.password}}</td>\\n\\t\\t</tr>\\n\\n\\t</table>\\n\\t<button (click)=\\\"getAllCustomers()\\\" style=\\\"margin-top: 5%\\\">Update List</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Customer} from '../../common/customer';\nimport { AdminRequestsService} from '../../services/admin-requests.service';\n@Component({\n  selector: 'app-getallcustomers',\n  templateUrl: './getallcustomers.component.html',\n  styleUrls: ['./getallcustomers.component.css']\n})\nexport class GetallcustomersComponent implements OnInit {\n\tcustomers : Customer[];\n  constructor(private _adminService: AdminRequestsService) { \n  \t_adminService.getAllCustomers();\n  }\n\n  ngOnInit() {\n  }\ngetAllCustomers(){\n\tconsole.log(\"check\");\n\tthis._adminService.getAllCustomers();\n\tthis.customers = this._adminService.customers;\n}\n}\n","module.exports = \"\"","module.exports = \"<h4>Remove/Update copmany</h4>\\n<div class=\\\"panel panel-primary\\\" style=\\\"height:110px;width: 20%; margin:1%\\\">\\n\\t<div class=\\\"panel-heading\\\">\\n\\t\\t<label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" checked>Search by ID</label>\\n\\t\\t<label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\">Search by Name</label>\\n\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"byId\\\" placeholder=\\\"Company Name or ID number\\\">\\n\\t\\t</div>\\n\\t\\t<button (click)=\\\"getCompany()\\\" class=\\\"btn btn-primary btn-block\\\">Find Company</button>\\n</div>\\n\\t\\n<div class=\\\"panel panel-primary\\\" style=\\\"height:440px;width: 20%; margin: 1%\\\">\\n\\t<div class=\\\"panel-heading\\\"><h5>COMAPNY</h5></div> \\n\\t<br>\\n\\t\\t<form  style=\\\"margin-left: 10px; margin-right: 10px\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label for=\\\"\\\">Company ID</label>\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyUpdate.id\\\" name=\\\"id\\\"> \\n\\t\\t\\t\\n\\t<br>\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"\\\">Company Name</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyUpdate.compName\\\" name=\\\"compName\\\">\\n\\t\\t\\n\\t<br>\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"\\\">Password</label>\\n\\t\\t\\t\\t<input type=\\\"passwod\\\" name=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyUpdate.password\\\" name=\\\"Password\\\">\\n\\t\\t\\t\\n\\t<br>\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"\\\">Email</label> \\n\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyUpdate.email\\\" name=\\\"email\\\"> \\n\\t\\t\\t\\n\\t<br>\\n\\n\\t<button (click)=\\\"removeCompany()\\\" class=\\\"btn btn-primary\\\">Remove Company</button>&nbsp;&nbsp;&nbsp;\\n\\t<button (click)=\\\"updateCompany()\\\" class=\\\"btn btn-primary\\\">Update Comapny</button>\\n\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Company} from '../../common/company'\nimport { AdminRequestsService} from '../../services/admin-requests.service';\nimport swal from 'sweetalert2';\n@Component({\n  selector: 'app-remove-company',\n  templateUrl: './remove-company.component.html',\n  styleUrls: ['./remove-company.component.css']\n})\nexport class RemoveCompanyComponent implements OnInit {\n  private byName : string; \n  private byId : number; \n  private searchById : boolean; \n  private companyUpdate : Company  = new Company (0 , \"\" , \"\" ,  \"\");\n  constructor(private _adminService:AdminRequestsService) { \n   }\n\n  ngOnInit() {\n  }\n\n  getCompany(){\n    this._adminService.searchCompanyById(this.byId).subscribe(\n      (resp) => {\n       \n          this.companyUpdate = resp.json();\n           console.log(this.companyUpdate);\n       },\n          (error) => {\n          swal (error._body);\n       });\n  }\n\n  removeCompany(){\n  \tthis._adminService.removeCompany(this.companyUpdate); \n  }\n\n  updateCompany(){\n  \tthis._adminService.updateCompany(this.companyUpdate);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h4>Remove/Update customer</h4>\\n<div class=\\\"panel panel-primary\\\" style=\\\"height:110px;width: 20%;\\\">\\n\\t<div class=\\\"panel-heading\\\">\\n\\t\\t<label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"byId\\\" checked>Search by ID</label>\\n\\t\\t<label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"byName\\\">Search by Name</label>\\n\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerId\\\" placeholder=\\\"Company Name or ID number\\\">\\n\\t\\t</div>\\n\\t\\t<button (click)=\\\"getCustomerById()\\\" class=\\\"btn btn-primary\\\" class=\\\"btn btn-primary btn-block\\\">Find Customer</button>\\n\\t\\n</div>\\n\\t\\n<div class=\\\"panel panel-primary\\\" style=\\\"height:360px ;width: 20%;\\\">\\n\\t<div class=\\\"panel-heading\\\"><h5>Customer</h5></div> \\n\\t<br>\\n\\t\\t<form  style=\\\"margin-left: 10px; margin-right: 10px\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label for=\\\"\\\">Customer ID</label>\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" name=\\\"id\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"updateCustomer.id\\\"> \\n\\t\\t\\t\\n\\t<br>\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"\\\">Customer Name</label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"updateCustomer.custName\\\">\\n\\t\\t\\n\\t<br>\\n\\n\\t\\t\\t\\n\\t\\t\\t\\t<label for=\\\"\\\">Password</label>\\n\\t\\t\\t\\t<input type=\\\"passwod\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"updateCustomer.password\\\">\\n\\t\\t\\t\\n\\t<br>\\n\\n\\t<button (click)=\\\"removeCustomer()\\\" class=\\\"btn btn-primary\\\">Remove Customer</button>&nbsp;&nbsp;&nbsp;\\n\\t<button (click)=\\\"updateTheCustomer()\\\" class=\\\"btn btn-primary\\\">Update Customer</button>\\n\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer} from '../../common/customer';\nimport { AdminRequestsService} from '../../services/admin-requests.service'; \nimport swal from 'sweetalert2';\n@Component({\n  selector: 'app-removeupdatecustomer',\n  templateUrl: './removeupdatecustomer.component.html',\n  styleUrls: ['./removeupdatecustomer.component.css']\n})\nexport class RemoveupdatecustomerComponent implements OnInit {\n  updateCustomer : Customer = new Customer(0 , \"\" , \"\");\n  customerId : number; \n  constructor(private _adminService : AdminRequestsService ) { }\n\n  ngOnInit() {\n  }\n\n  getCustomerById(){\n  \tthis._adminService.searchCustomerById(this.customerId).subscribe(\n  \t\t(resp)=>{\n  \t\t\tthis.updateCustomer = resp.json();\n  \t\t} , \n      (error)=>{\n        swal(error._body);\n      });\n  }\n\n\n  updateTheCustomer(){\n  \tthis._adminService.updateCustomer(this.updateCustomer);\n  \t\n  }\n\n  removeCustomer(){\n  \tthis._adminService.removeCustomer(this.updateCustomer);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http} from '@angular/http';\nimport { Company} from '../common/company';\nimport { HttpHeaders} from '@angular/common/http'; \nimport { RequestOptions} from '@angular/http';\nimport { Customer} from '../common/customer'; \nimport swal from 'sweetalert2';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminRequestsService {\n  public companies : Company[];\n  public  company : Company;\n  private customer : Customer; \n  public customers : Customer[]; \n  constructor(private http: Http) {\n  }\n\n  getAllComapnies(){\n  \t\n  \t//this.http.get(\"http://localhost:8082/admin/getAllCompanies\").subscribe(\n    this.http.get(\"https://couponsystemv1.herokuapp.com/admin/getAllCompanies\").subscribe(\n      (resp)=>{\n  \t\t\tthis.companies = resp.json();\n  \t\t})\n\n  }\n\n  createNewCopmany(company:Company){\n    // return this.http.post(\"http://localhost:8082/admin/createCompany\" , company);\n    return this.http.post(\"https://couponsystemv1.herokuapp.com/admin/createCompany\" , company);\n  }\n\n  searchCompanyById(id:number){\n   //return  this.http.get(\"http://localhost:8082/admin/getCompany/\" + id)\n   return  this.http.get(\"https://couponsystemv1.herokuapp.com/admin/getCompany/\" + id)\n      }\n    // need to create for in Server Side \n  searchCompanyByName(name:string){\n    let company:Company; \n    return company; \n  }\n\n  removeCompany(company:Company){\n    let options = new RequestOptions({ \n    body: company,\n  });\n\n    // this.http.delete(\"http://localhost:8082/admin/removeCompany\" , options).subscribe(\n      this.http.delete(\"https://couponsystemv1.herokuapp.com/admin/removeCompany\" , options).subscribe(\n      (resp)=>{\n        if (resp.status==200){\n        swal ('Company was removed');\n       }\n       })\n  }\n\n  updateCompany(company:Company){\n   // this.http.put(\"http://localhost:8082/admin/companyDetailsUpdate\" , company).subscribe(\n     this.http.put(\"https://couponsystemv1.herokuapp.com/admin/companyDetailsUpdate\" , company).subscribe(  \n      (resp)=>{\n       this.company = resp.json(); \n       swal ('Company ' +this.company.compName  + ' was Updated');\n      })\n\n  }\n\n\n// Customer Services \n\n  getAllCustomers(){\n    // this.http.get(\"http://localhost:8082/admin/getCustomerList\").subscribe(\n      this.http.get(\"https://couponsystemv1.herokuapp.com/admin/getCustomerList\").subscribe(\n      (resp)=>{\n        this.customers = resp.json();\n      });\n  }\n\n  createCustomer(customer:Customer){\n   // return this.http.post(\"http://localhost:8082/admin/addCustomer\" , customer); \n    return this.http.post(\"https://couponsystemv1.herokuapp.com/admin/addCustomer\" , customer); \n    // this.http.post(\"http://localhost:8082/admin/addCustomer\" , customer).subscribe(\n    //   (resp)=>{\n    //     this.customer = resp.json(); \n    //    swal ('Customer created with ID : ' + this.customer.id );\n    //   })\n  }\n\n  searchCustomerById(id:number){\n    //return this.http.get(\"http://localhost:8082/admin/getCustomer/\" + id);\n    return this.http.get(\"https://couponsystemv1.herokuapp.com/admin/getCustomer/\" + id);\n  }\n\n  updateCustomer(customer:Customer){\n   // this.http.put(\"http://localhost:8082/admin/updateCustomerDetails\", customer).subscribe(\n    this.http.put(\"https://couponsystemv1.herokuapp.com/admin/updateCustomerDetails\", customer).subscribe(  \n      (resp)=> {\n       this.customer = resp.json(); \n       swal ('Customer ' +this.customer.custName + ' updated');\n      })\n  }\n\n  removeCustomer(customer : Customer){\n    let options = new RequestOptions({\n      body: customer\n    });\n     //this.http.delete(\"http://localhost:8082/admin/removeCustomer\" , options).subscribe(\n     this.http.delete(\"https://couponsystemv1.herokuapp.com/admin/removeCustomer\" , options).subscribe(\n      (resp)=>{\n       this.customer = resp.json(); \n       swal ('Customer ' +this.customer.custName + ' removed');\n      })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}